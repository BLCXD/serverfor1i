name: Minecraft Server Continuous Backup with Cloudflare

on:
  schedule:
    - cron: "*/355 * * * *"  # restart co 5 godzin i 55 minut
  workflow_dispatch:

jobs:
  run-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- SETUP JAVA 21 ---
      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      # --- INSTALL DEPENDENCIES ---
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y curl unzip jq socat

      # --- DOWNLOAD PAPERMC ---
      - name: Download PaperMC
        run: |
          mkdir -p server
          cd server
          PAPER_BUILD=$(curl -s https://api.papermc.io/v2/projects/paper | jq -r '.versions[-1]')
          LATEST_BUILD=$(curl -s https://api.papermc.io/v2/projects/paper/versions/$PAPER_BUILD/builds | jq -r '.builds[-1].build')
          DOWNLOAD_URL="https://api.papermc.io/v2/projects/paper/versions/$PAPER_BUILD/builds/$LATEST_BUILD/downloads/paper-$PAPER_BUILD-$LATEST_BUILD.jar"
          curl -sSL "$DOWNLOAD_URL" -o server.jar
          echo "eula=true" > eula.txt

      # --- RESTORE WORLD ---
      - name: Restore world from backup
        run: |
          cd server
          if [ -f ../world-backup.tar.gz ]; then
            echo "Restoring world from backup..."
            tar -xzf ../world-backup.tar.gz
          fi

      # --- START SERVER ---
      - name: Start Minecraft Server
        run: |
          cd server
          java -Xmx2G -Xms1G -jar server.jar nogui &

      # --- CLOUDflare TUNNEL ---
      - name: Start Cloudflare Tunnel
        run: |
          curl -sSL https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -o cloudflared.deb
          sudo dpkg -i cloudflared.deb
          cloudflared tunnel --url tcp://localhost:25565 --no-autoupdate &
          echo "Cloudflare Tunnel running. Check your tunnel dashboard for public address."

      # --- CONTINUOUS BACKUP EVERY MINUTE ---
      - name: Continuous backup every minute
        run: |
          cd server
          git config user.email "actions@github.com"
          git config user.name "github-actions[bot]"

          bash -c '
          for i in {1..350}; do
            if [ -d world ]; then
              tar -czf ../world-backup.tar.gz world
              git add ../world-backup.tar.gz
              if ! git diff --cached --quiet; then
                git commit -m "Auto backup iteration $i"
                git push || true
                echo "Backup $i committed."
              else
                echo "No changes for iteration $i."
              fi
            fi
            sleep 60
          done
          '
