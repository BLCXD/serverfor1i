name: Minecraft Server

on:
  schedule:
    - cron: "*/355 * * * *"  # restart co 5h 55min
  workflow_dispatch:         # rÄ™czne uruchomienie

jobs:
  run-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- NGROK SETUP ---
      - name: Install dependencies and download ngrok v3
        run: |
          sudo apt update
          sudo apt install -y curl unzip jq
          curl -sSL https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.zip -o ngrok.zip
          unzip ngrok.zip
          sudo mv ngrok /usr/local/bin/ngrok
          ngrok version

      - name: Authenticate ngrok
        run: |
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      # --- MINECRAFT SERVER SETUP ---
      - name: Download PaperMC
        run: |
          mkdir -p server
          cd server
          PAPER_BUILD=$(curl -s https://api.papermc.io/v2/projects/paper | jq -r '.versions[-1]')
          LATEST_BUILD=$(curl -s https://api.papermc.io/v2/projects/paper/versions/$PAPER_BUILD/builds | jq -r '.builds[-1].build')
          DOWNLOAD_URL="https://api.papermc.io/v2/projects/paper/versions/$PAPER_BUILD/builds/$LATEST_BUILD/downloads/paper-$PAPER_BUILD-$LATEST_BUILD.jar"
          echo "Downloading PaperMC $PAPER_BUILD build $LATEST_BUILD..."
          curl -sSL "$DOWNLOAD_URL" -o server.jar
          echo "eula=true" > eula.txt

      # --- RUN SERVER + NGROK ---
      - name: Start Minecraft Server with ngrok
        run: |
          cd server
          java -Xmx2G -Xms1G -jar server.jar nogui &
          sleep 30
          ngrok tcp 25565 --log=stdout > ngrok.log &
          sleep 10
          echo "Public server URL:"
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'

      # --- BACKUP (opcjonalne) ---
      - name: Backup world files
        if: always()
        run: |
          cd server
          if [ -d world ]; then
            echo "Creating world backup..."
            tar -czf ../world-backup.tar.gz world
          else
            echo "No world folder found."
          fi
          cd ..
          git config user.email "actions@github.com"
          git config user.name "github-actions[bot]"
          git add world-backup.tar.gz || true
          git commit -m "Backup world (auto)" || true
          git push || true
